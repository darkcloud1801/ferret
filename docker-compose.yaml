version: '3.8'

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./docker/elasticsearch/certs:/usr/share/elasticsearch/config/certs
      - ./docker/setup/scripts/:/usr/share/elasticsearch/scripts
    user: "0"
    env_file:
      - .env
    command: ["/bin/bash", "/usr/share/elasticsearch/scripts/setup.sh"]

    healthcheck:
      test: ["CMD-SHELL", "test -f /usr/local/bin/setup_done || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  es01:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./docker/elasticsearch/certs:/usr/share/elasticsearch/config/certs
      - ./data/elasticsearch/es01/data:/usr/share/elasticsearch/data
    env_file:
      - .env
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
#      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.type=single-node
#      - discovery.seed_hosts=es02,es03
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  pipeline-loader:
    depends_on:
      es01:
        condition: service_healthy
    image: alpine
    volumes:
      - ./docker/elasticsearch/cohen:/usr/local/bin/config/elasticsearch
      - ./docker/fscrawler/config:/usr/local/bin/config/fscrawler
    entrypoint: ["/bin/sh", "/usr/local/bin/config/elasticsearch/initialize_index.sh"]
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "test -f /usr/local/bin/init_pipeline_done || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

#  es02:
#    depends_on:
#      - es01
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    volumes:
#      - ./certs:/usr/share/elasticsearch/config/certs
#      - esdata02:/usr/share/elasticsearch/data
#    environment:
#      - node.name=es02
#      - cluster.name=${CLUSTER_NAME}
#      - cluster.initial_master_nodes=es01,es02,es03
#      - discovery.seed_hosts=es01,es03
#      - bootstrap.memory_lock=true
#      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.key=certs/es02/es02.key
#      - xpack.security.http.ssl.certificate=certs/es02/es02.crt
#      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.http.ssl.verification_mode=certificate
#      - xpack.security.transport.ssl.enabled=true
#      - xpack.security.transport.ssl.key=certs/es02/es02.key
#      - xpack.security.transport.ssl.certificate=certs/es02/es02.crt
#      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.transport.ssl.verification_mode=certificate
#      - xpack.license.self_generated.type=${LICENSE}
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 120
#
#  es03:
#    depends_on:
#      - es02
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    volumes:
#      - ./certs:/usr/share/elasticsearch/config/certs
#      - esdata03:/usr/share/elasticsearch/data
#    environment:
#      - node.name=es03
#      - cluster.name=${CLUSTER_NAME}
#      - cluster.initial_master_nodes=es01,es02,es03
#      - discovery.seed_hosts=es01,es02
#      - bootstrap.memory_lock=true
#      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.http.ssl.key=certs/es03/es03.key
#      - xpack.security.http.ssl.certificate=certs/es03/es03.crt
#      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.http.ssl.verification_mode=certificate
#      - xpack.security.transport.ssl.enabled=true
#      - xpack.security.transport.ssl.key=certs/es03/es03.key
#      - xpack.security.transport.ssl.certificate=certs/es03/es03.crt
#      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
#      - xpack.security.transport.ssl.verification_mode=certificate
#      - xpack.license.self_generated.type=${LICENSE}
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
#        ]
#      interval: 10s
#      timeout: 10s
#      retries: 120

  kibana:
    depends_on:
      es01:
        condition: service_healthy
#      es02:
#        condition: service_healthy
#      es03:
#        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - ./docker/elasticsearch/certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  fscrawler:
    depends_on:
      pipeline-loader:
        condition: service_healthy
      es01:
        condition: service_healthy
    build:
      context: .
      dockerfile: docker/fscrawler/Dockerfile
    container_name: fscrawler
    restart: always
    volumes:
      - ../cohen_documents/cohen/Individual:/usr/share/fscrawler/cohen/Individual
      - ../cohen_documents/cohen/Natives:/usr/share/fscrawler/cohen/Natives
      - ./docker/fscrawler/config:/root/.fscrawler
      - ./docker/fscrawler/logs:/usr/share/fscrawler/logs
      - ./docker/fscrawler/external:/usr/share/fscrawler/external
      - ./docker/fscrawler/log4j2.properties:/usr/share/fscrawler/log4j2.properties:ro
    environment:
      - FSCRAWLER_DEBUG=true
      - FSCLOG=debug
      - JAVA_OPTS=-Xms512m -Xmx1024m
    entrypoint: ["/bin/sh", "/root/.fscrawler/run_fscrawler.sh"]
    ports:
      - "8080:8080"


volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  kibanadata:
    driver: local